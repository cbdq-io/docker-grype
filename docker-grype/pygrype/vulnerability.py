"""File: pygrype/vulnerability.py."""


class Vulnerability:
    def __init__(self, vulnerability_id):
        """
        Construct a vulnerability object.

        Parameters
        ----------
        vulnerability_id : str
            The id of the vulnerability (e.g. CVE-2022-29458).
        """
        self._allowed = None
        self._installed_version = None
        self._name = None
        self._severity = None
        self.vulnerability_id = vulnerability_id

    def name(self, name=None):
        """
        Get or set the name of the affected artefact

        Parameters
        ----------
        name : str,optional
            Optionally set the name of the affected artefact (e.g. libncurses6).

        Returns
        -------
        str
            The value of name in the object.
        """
        if name is not None:
            self._name = name
        return self._name

    def installed_version(self, installed_version=None):
        """
        Get or set the value of the version of the affected artefact.

        Parameters
        ----------
        installed_version : str,optional
            Optionally set the version of the artefact (e.g. 6.2+20201114-2).

        Returns
        -------
        str
            The value of installed_version in the object.
        """
        if installed_version is not None:
            self._installed_version = installed_version
        return self._installed_version

    def severity(self, severity=None):
        """
        Get or set the value of severity of the vulnerability.

        Parameters
        ----------
        severity : str,optional
            Optionally set the severity of the vulnerability (e.g. High).

        Returns
        -------
        str
            The value of severity in the object.
        """
        if severity is not None:
            self._severity = severity
        return self._severity

    def allowed(self, allowed=None):
        """
        Get or set the value of whether the vulnerability is allowed.

        The value of True or False will be changed to yes or no respectively.

        Parameters
        ----------
        allowed : bool,optional
            Optionally set whether the vulnerability on the allowed list or not.

        Returns
        -------
        str
            The value of allowed in the object.
        """
        if allowed is not None:
            if allowed:
                self._allowed = 'yes'
            else:
                self._allowed = 'no'

        return self._allowed
